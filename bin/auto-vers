#!/usr/bin/env node

var argv = process.argv.slice(2)

var autoVers = require('../src/index')

var version = require('../package.json').version

var versions = null

var type = null

var extra = null

var confirm = null

var tip = null

var url = null

main()
function main() {
    if (!argv.length) return help()
    while (argv.length) {
        var a = argv.shift()
        var indexOfEqualSign = a.indexOf('=')
        if (indexOfEqualSign !== -1) {
            a = a.slice(0, indexOfEqualSign)
            argv.unshift(a.slice(indexOfEqualSign + 1))
        }
        switch (a) {
            case '-v':
            case '--version':
                versions = argv.shift()
                break
            case '-i':
            case '--inc':
            case '--increment':
                switch (argv[0]) {
                    case 'major':
                    case 'minor':
                    case 'patch':
                    case 'premajor':
                    case 'preminor':
                    case 'prepatch':
                    case 'prerelease':
                        type = argv.shift()
                        break
                    default:
                        type = 'patch'
                        break
                }
                break
            case '-e':
            case '-extra':
                extra = null
                break
            case '-p':
            case '--path':
                url = argv.shift();
                break;
            case '-c':
            case '--confirm':
                confirm = true
                break
            case '-t':
            case '--tip':
                tip = true
                break
            case '-h':
            case '--help':
            case '-?':
                return help()
            default:
                versions = a
                break
        }
    }

    return autoVers({version: versions, type, extra, confirm, tip, url})
}

function help() {
    console.log(['auto-vers '+ version, 
    '',
    'Auto update version for your application',
    'Usage: auto-vers [options] <version> [[...]]',
    '',
    'Options',
    '-v --version <version>',
    '        Can update version directly.',
    '-i --inc --increment [<level>]',
    '        Increment a version by the specified level. Level can',
    '        be one of: major, minor, patch, premajor, preminor',
    "        , prepatch or prerelease. Default level is 'patch'.",
    '        Only one version may be specified.',
    '-e --extra [<value>]',
    '        This is for prerelease extra data',
    "        Such as 'beta','alpha' ",
    '-c --confirm',
    '        Do not update the version directly, you can confirm. ',
    '        This is a safe mode. ',
    '-t --tip',
    `        Provide choice to you. If you don't know how to update`,
    '        you can choose this option',
    ].join('\n'));
}